function [Stim, robs] = bin_spikes_as_trials(D, cid, varargin)
% [Stim, robs] = bin_spikes_as_trials(D, cid, varargin)

[stim, robs, behavior, opts] = bin_ssunit(D, cid, varargin{:});

[direction, speed, freq] = deal(stim{:});
[runspeed, phase, pupil, fixations] = deal(behavior{:});

good_trials = ~(isnan(direction) | mean(isnan(runspeed),2) > .25);
num_trials = sum(good_trials);

stimon = repmat(double(opts.lags > 0 & opts.lags < (max(opts.lags) - opts.postwin))', 1, num_trials);
dfix = filter([1; -1], 1, fixations(good_trials,:)');

% reshape into trials
Stim = struct('bin_size', opts.binsize, ...
    'trial_time', opts.lags, ...
    'trial_list', opts.trialix(good_trials), ...
    'grating_onsets', opts.gratingonsets(good_trials), ...
    'contrast', .5*stimon, ...
    'phase_grating', phase(good_trials,:)'.*stimon, ...
    'freq', stimon.*freq(good_trials)', ...
    'direction', stimon.*direction(good_trials)', ...
    'speed_grating', stimon.*speed(good_trials)', ...
    'tread_speed', runspeed(good_trials,:)', ...
    'saccade_onset', double(dfix==-1), ...
    'saccade_offset', double(dfix==1), ...
    'eye_pupil', pupil(good_trials,:)');

robs = robs(good_trials,:)';